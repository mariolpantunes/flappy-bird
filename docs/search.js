window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"src": {"fullname": "src", "modulename": "src", "kind": "module", "doc": "<p></p>\n"}, "src.backend": {"fullname": "src.backend", "modulename": "src.backend", "kind": "module", "doc": "<p></p>\n"}, "src.backend.Rect": {"fullname": "src.backend.Rect", "modulename": "src.backend", "qualname": "Rect", "kind": "class", "doc": "<p>Data class used to hold the rectangle data.\nUsed in the collision algorithm.</p>\n"}, "src.backend.Rect.__init__": {"fullname": "src.backend.Rect.__init__", "modulename": "src.backend", "qualname": "Rect.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">h</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, "src.backend.rect_rect_collision": {"fullname": "src.backend.rect_rect_collision", "modulename": "src.backend", "qualname": "rect_rect_collision", "kind": "function", "doc": "<p>Computes the collision of two rectangular shapes.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>r1 (Rect):</strong>  the first rectangle</li>\n<li><strong>r2 (Rect):</strong>  the second rectangle</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>bool: true in case of collision, false otherwise</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">r1</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">Rect</span>, </span><span class=\"param\"><span class=\"n\">r2</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">backend</span><span class=\"o\">.</span><span class=\"n\">Rect</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "src.backend.Player": {"fullname": "src.backend.Player", "modulename": "src.backend", "qualname": "Player", "kind": "class", "doc": "<p>Class that represents a player in the game (a flappy bird).</p>\n"}, "src.backend.Player.__init__": {"fullname": "src.backend.Player.__init__", "modulename": "src.backend", "qualname": "Player.__init__", "kind": "function", "doc": "<p>Constructor for a Player object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>uuid (str):</strong>  unique identifier</li>\n<li><strong>px (int):</strong>  initial position x (default 200)</li>\n<li><strong>py (int):</strong>  initial position y (default 140)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uuid</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">px</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">200</span>, </span><span class=\"param\"><span class=\"n\">py</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">140</span></span>)</span>"}, "src.backend.Player.update": {"fullname": "src.backend.Player.update", "modulename": "src.backend", "qualname": "Player.update", "kind": "function", "doc": "<p>Updates the player position.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dt (float):</strong>  the duration of each frame (default 1/30)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.03333333333333333</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.Pipe": {"fullname": "src.backend.Pipe", "modulename": "src.backend", "qualname": "Pipe", "kind": "class", "doc": "<p>Class that represents a pipe in the game.</p>\n"}, "src.backend.Pipe.__init__": {"fullname": "src.backend.Pipe.__init__", "modulename": "src.backend", "qualname": "Pipe.__init__", "kind": "function", "doc": "<p>Constructor for a Pipe object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>px (int):</strong>  initial position x</li>\n<li><strong>py (int):</strong>  initial position y</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">px</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">py</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "src.backend.Pipe.update": {"fullname": "src.backend.Pipe.update", "modulename": "src.backend", "qualname": "Pipe.update", "kind": "function", "doc": "<p>Updates the pipe position.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dt (float):</strong>  the duration of each frame (default 1/30)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.03333333333333333</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.Pipe.collisions": {"fullname": "src.backend.Pipe.collisions", "modulename": "src.backend", "qualname": "Pipe.collisions", "kind": "function", "doc": "<p>Check if any player collided with the pipe.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>players (list):</strong>  list of active players</li>\n<li><strong>world_height (int):</strong>  the world height</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: players that collided with the pipe</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">players</span><span class=\"p\">:</span> <span class=\"nb\">list</span>, </span><span class=\"param\"><span class=\"n\">world_height</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "src.backend.World": {"fullname": "src.backend.World", "modulename": "src.backend", "qualname": "World", "kind": "class", "doc": "<p>Class that contains all the elements in the world (birds and pipes).</p>\n"}, "src.backend.World.__init__": {"fullname": "src.backend.World.__init__", "modulename": "src.backend", "qualname": "World.__init__", "kind": "function", "doc": "<p>Constructor for a World object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>with_pipes (bool):</strong>  with or without pipes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">with_pipes</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "src.backend.World.reset": {"fullname": "src.backend.World.reset", "modulename": "src.backend", "qualname": "World.reset", "kind": "function", "doc": "<p>Reset the world state.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.World.add_player": {"fullname": "src.backend.World.add_player", "modulename": "src.backend", "qualname": "World.add_player", "kind": "function", "doc": "<p>Adds a new player to the world.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ws:</strong>  websocket that identifies the players</li>\n<li><strong>uuid (str):</strong>  player unique identification</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ws</span>, </span><span class=\"param\"><span class=\"n\">uuid</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.World.number_players": {"fullname": "src.backend.World.number_players", "modulename": "src.backend", "qualname": "World.number_players", "kind": "function", "doc": "<p>Returns the current number of active players.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>int: number of active players</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "src.backend.World.player_click": {"fullname": "src.backend.World.player_click", "modulename": "src.backend", "qualname": "World.player_click", "kind": "function", "doc": "<p>Flag the player input (click).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>ws:</strong>  websocket that identifies the players</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">ws</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.World.player_neural_network": {"fullname": "src.backend.World.player_neural_network", "modulename": "src.backend", "qualname": "World.player_neural_network", "kind": "function", "doc": "<p>Neural network definition and activation to be displayed on the viewer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>neural_network (dict):</strong>  neural network definition and activation data</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">neural_network</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.World.update": {"fullname": "src.backend.World.update", "modulename": "src.backend", "qualname": "World.update", "kind": "function", "doc": "<p>Updates the position of the pipes and the players.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dt (float):</strong>  the duration of each frame (default 1/30)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.03333333333333333</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.World.collisions": {"fullname": "src.backend.World.collisions", "modulename": "src.backend", "qualname": "World.collisions", "kind": "function", "doc": "<p>Check if the players have colidded with the pipes or the world</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: player to be removed</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "src.backend.World.update_highscore": {"fullname": "src.backend.World.update_highscore", "modulename": "src.backend", "qualname": "World.update_highscore", "kind": "function", "doc": "<p>Update the highscore</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dt (float):</strong>  the duration of each frame (default 1/30)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.03333333333333333</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.backend.World.dump": {"fullname": "src.backend.World.dump", "modulename": "src.backend", "qualname": "World.dump", "kind": "function", "doc": "<p>Dumps the world content into a dictionary.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: world content</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "src.backend.GameServer": {"fullname": "src.backend.GameServer", "modulename": "src.backend", "qualname": "GameServer", "kind": "class", "doc": "<p>Class that manages the game and the incoming messages.</p>\n"}, "src.backend.GameServer.__init__": {"fullname": "src.backend.GameServer.__init__", "modulename": "src.backend", "qualname": "GameServer.__init__", "kind": "function", "doc": "<p>Constructor for a GameServer object.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>with_pipes (bool):</strong>  with or without pipes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">with_pipes</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "src.backend.GameServer.incomming_handler": {"fullname": "src.backend.GameServer.incomming_handler", "modulename": "src.backend", "qualname": "GameServer.incomming_handler", "kind": "function", "doc": "<p>Manages the incomming messages.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>websocket:</strong>  websocket</li>\n<li><strong>path (str):</strong>  path used by the client</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">websocket</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "src.backend.GameServer.mainloop": {"fullname": "src.backend.GameServer.mainloop", "modulename": "src.backend", "qualname": "GameServer.mainloop", "kind": "function", "doc": "<p>Defines the main loop of the game.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>args (argparse.Namespace):</strong>  the arguments to configure the game loop</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">Namespace</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "src.backend.main": {"fullname": "src.backend.main", "modulename": "src.backend", "qualname": "main", "kind": "function", "doc": "<p>Main (async) method.</p>\n\n<p>Setups the game loop and the websocketserver.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>args (argparse.Namespace):</strong>  the program arguments</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">Namespace</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "src.nn": {"fullname": "src.nn", "modulename": "src.nn", "kind": "module", "doc": "<p>Library that implements a basic multilayer perceptron.\nA multilayer perceptron (MLP) is a fully connected class of feedforward artificial neural network (ANN).\nWas designed for teaching purposes, it can be used for neuroevolution optimization.</p>\n"}, "src.nn.NN": {"fullname": "src.nn.NN", "modulename": "src.nn", "qualname": "NN", "kind": "class", "doc": "<p>Neural Network (NN) helper class.</p>\n\n<p>It has been devised to be used in a neuroevolution training scheme.\nThis means that the traditional backpropagation algorithm is not available.\nIt offers two other methods namely ravel and update.\nRavel reduces the NN to a 1D  vector.\nThe update method receives a 1D vector and loads the values into a network.</p>\n"}, "src.nn.NN.__init__": {"fullname": "src.nn.NN.__init__", "modulename": "src.nn", "qualname": "NN.__init__", "kind": "function", "doc": "<p>Constructor for a NN object.</p>\n\n<p>Requires the definition of the network as follows::</p>\n\n<pre><code>NN_ARCHITECTURE = [\n{'input_dim': 4, 'output_dim': 2, 'activation': 'relu'},\n{'input_dim': 2, 'output_dim': 1, 'activation': 'sigmoid'}\n]\n</code></pre>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nn_architecture (dict):</strong>  neural network definition</li>\n<li><strong>seed (int):</strong>  seed for the random generator used in the network initialization</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nn_architecture</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "src.nn.NN.predict": {"fullname": "src.nn.NN.predict", "modulename": "src.nn", "qualname": "NN.predict", "kind": "function", "doc": "<p>Implements the forward propagation algorithm for a Neural Network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>X (np.ndarray):</strong>  1D vector that is the input of the network</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: the output of the network</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.NN.predict_activations": {"fullname": "src.nn.NN.predict_activations", "modulename": "src.nn", "qualname": "NN.predict_activations", "kind": "function", "doc": "<p>Implements the forward propagation algorithm for a Neural Network.\nIt also returns a list with the activations of each node (used for visualization purposes).</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>X (np.ndarray):</strong>  1D vector that is the input of the network</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: the output of the network, and the activations of each node</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.nn.NN.ravel": {"fullname": "src.nn.NN.ravel", "modulename": "src.nn", "qualname": "NN.ravel", "kind": "function", "doc": "<p>Reduces the network into a 1D vector.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: a 1D vector that represents the network</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.NN.update": {"fullname": "src.nn.NN.update", "modulename": "src.nn", "qualname": "NN.update", "kind": "function", "doc": "<p>Loads a 1D vector into a network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>params (np.ndarray):</strong>  1D vector that contains the weights and bias of the network</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.nn.NN.layers": {"fullname": "src.nn.NN.layers", "modulename": "src.nn", "qualname": "NN.layers", "kind": "function", "doc": "<p>Returns the number of nodes per layer.</p>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: the number of nodes per layer</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "src.nn.init_layers": {"fullname": "src.nn.init_layers", "modulename": "src.nn", "qualname": "init_layers", "kind": "function", "doc": "<p>Given a network definition it creates and initializes a new network.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nn_architecture (dict):</strong>  neural network definition</li>\n<li><strong>seed (int):</strong>  seed for the random generator used in the network initialization</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: with the network parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nn_architecture</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "src.nn.sigmoid": {"fullname": "src.nn.sigmoid", "modulename": "src.nn", "qualname": "sigmoid", "kind": "function", "doc": "<p>Computes the sigmoid function for a 1D vector.\n$$\n    \\sigma(z) = \\frac{1} {1 + e^{-z}}\n$$</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Z (np.ndarray):</strong>  1D input vector</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: 1D vector with the results of the sigmoid operation</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.sigmoid_backward": {"fullname": "src.nn.sigmoid_backward", "modulename": "src.nn", "qualname": "sigmoid_backward", "kind": "function", "doc": "<p>Computes the backpropagation step for the sigmoid function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dA (np.ndarray):</strong>  derivative of the previous layer</li>\n<li><strong>Z (np.ndarray):</strong>  1D input vector</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: 1D vector with the results of the backpropagation step</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dA</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.relu": {"fullname": "src.nn.relu", "modulename": "src.nn", "qualname": "relu", "kind": "function", "doc": "<p>Computes the relu function for a 1D vector.\n$$\n    Relu(z) = max(0, z)\n$$</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Z (np.ndarray):</strong>  1D input vector</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: 1D vector with the results of the relu operation</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.relu_backward": {"fullname": "src.nn.relu_backward", "modulename": "src.nn", "qualname": "relu_backward", "kind": "function", "doc": "<p>Computes the backpropagation step for the relu function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dA (np.ndarray):</strong>  derivative of the previous layer</li>\n<li><strong>Z (np.ndarray):</strong>  1D input vector</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: 1D vector with the results of the backpropagation step</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dA</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.swish": {"fullname": "src.nn.swish", "modulename": "src.nn", "qualname": "swish", "kind": "function", "doc": "<p>Computes the swish function for a 1D vector.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Z (np.ndarray):</strong>  1D input vector</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: 1D vector with the results of the swish operation</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.swish_backward": {"fullname": "src.nn.swish_backward", "modulename": "src.nn", "qualname": "swish_backward", "kind": "function", "doc": "<p>Computes the backpropagation step for the swish function.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dA (np.ndarray):</strong>  derivative of the previous layer</li>\n<li><strong>Z (np.ndarray):</strong>  1D input vector</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: 1D vector with the results of the backpropagation step</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dA</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.single_layer_forward_propagation": {"fullname": "src.nn.single_layer_forward_propagation", "modulename": "src.nn", "qualname": "single_layer_forward_propagation", "kind": "function", "doc": "<p>Computes a single step of the forward propagation algorithm.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>A_prev (np.ndarray):</strong>  Result from the previous layer </li>\n<li><strong>W_curr (np.ndarray):</strong>  The weights </li>\n<li><strong>b_curr (np.ndarray):</strong>  The bias</li>\n<li><strong>activation (str):</strong>  the activation function</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: the forward pass vector</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  on non-supported activation function</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">A_prev</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">W_curr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_curr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relu&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.full_forward_propagation": {"fullname": "src.nn.full_forward_propagation", "modulename": "src.nn", "qualname": "full_forward_propagation", "kind": "function", "doc": "<p>Computes a single step of the forward propagation algorithm.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>X (np.ndarray):</strong>  1D vector that is the input of the network</li>\n<li><strong>params_values (dict):</strong>  the network parameters (weights and bias)</li>\n<li><strong>nn_architecture (dict):</strong>  neural network definition</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuples: network output and the memory dict(for debug)</p>\n</blockquote>\n\n<h6 id=\"raises\">Raises:</h6>\n\n<ul>\n<li><strong>Exception:</strong>  on non-supported activation function</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">params_values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">nn_architecture</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.nn.get_cost_value": {"fullname": "src.nn.get_cost_value", "modulename": "src.nn", "qualname": "get_cost_value", "kind": "function", "doc": "<p>Binary crossentropy cost function</p>\n\n<p>$$\n    J(W,b) = \\frac{1}{m} \\sum{m}{i=1} L(\\hat{y}^{(i)}, y^{(i)});\n    L(\\hat{y},y) = -{(y\\log(\\hat{y}) + (1 - y)\\log(1 - \\hat{y}))}\n$$</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Y_hat (np.ndarray):</strong>  the predicted values</li>\n<li><strong>Y (np.ndarray):</strong>  the expected values (outcome)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: binary crossentropy cost</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Y_hat</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">Y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.convert_prob_into_class": {"fullname": "src.nn.convert_prob_into_class", "modulename": "src.nn", "qualname": "convert_prob_into_class", "kind": "function", "doc": "<p>An auxiliary function that converts probability into class</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>probs (np.ndarray):</strong>  the binary class probabilities</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>np.ndarray: binary classes</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">probs</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "src.nn.get_accuracy_value": {"fullname": "src.nn.get_accuracy_value", "modulename": "src.nn", "qualname": "get_accuracy_value", "kind": "function", "doc": "<p>Computes the accuracy value</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Y_hat (np.ndarray):</strong>  the predicted values</li>\n<li><strong>Y (np.ndarray):</strong>  the expected values (outcome)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: accuracy</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Y_hat</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">Y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "src.nn.update": {"fullname": "src.nn.update", "modulename": "src.nn", "qualname": "update", "kind": "function", "doc": "<p>The goal of this method is to update network parameters using gradient optimisation.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>params_values (dict):</strong>  the network parameters (weights and bias)</li>\n<li><strong>grad_values (dict):</strong>  stores cost function derivatives calculated with respect to these parameters</li>\n<li><strong>nn_architecture (dict):</strong>  neural network definition</li>\n<li><strong>learning_rate (float):</strong>  the learning rate for the gradient descent optimization method</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: the network parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">params_values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">grads_values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">nn_architecture</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "src.nn.single_layer_backward_propagation": {"fullname": "src.nn.single_layer_backward_propagation", "modulename": "src.nn", "qualname": "single_layer_backward_propagation", "kind": "function", "doc": "<p>The essence of this algorithm is the recursive use of a chain rule known \nfrom differential calculus \u2014 calculate a derivative of functions created \nby assembling other functions, whose derivatives we already know.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>dA_curr (np.ndarray):</strong>  the derivative of the current activation</li>\n<li><strong>W_curr (np.ndarray):</strong>  The weights </li>\n<li><strong>b_curr (np.ndarray):</strong>  The bias</li>\n<li><strong>Z_curr (np.ndarray):</strong>  the previous values</li>\n<li><strong>A_prev (np.ndarray):</strong>  the previous activation values </li>\n<li><strong>activation (str):</strong>  the activation function (default relu)</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: the derivate for the next layer, and the derivatives of the weights and bias</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dA_curr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">W_curr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">b_curr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">Z_curr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">A_prev</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;relu&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.nn.full_backward_propagation": {"fullname": "src.nn.full_backward_propagation", "modulename": "src.nn", "qualname": "full_backward_propagation", "kind": "function", "doc": "<p>Backward propagation algorithm (for binary classification)</p>\n\n<p>We start by calculating a derivative of the cost function with \nrespect to the prediction vector \u2014 result of forward propagation. \nThen iterate through the layers of the network starting from the \nend and calculate the derivatives with respect to all parameters.\nUltimately, function returns a python dictionary containing the gradient we are looking for.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>Y_hat (np.ndarray):</strong>  the predicted values</li>\n<li><strong>Y (np.ndarray):</strong>  the expected values (outcome)</li>\n<li><strong>memory (dict):</strong>  intermediate values (debug)</li>\n<li><strong>params_values (dict):</strong>  the network parameters (weights and bias)</li>\n<li><strong>nn_architecture (dict):</strong>  neural network definition</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>dict: stores cost function derivatives calculated with respect to these parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">Y_hat</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">Y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">memory</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">params_values</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">nn_architecture</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "src.nn.train": {"fullname": "src.nn.train", "modulename": "src.nn", "qualname": "train", "kind": "function", "doc": "<p>The function returns optimized weights obtained as a \nresult of the training and the history of the metrics \nchange during the training.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>X (np.ndarray):</strong>  1D vector that is the input of the network</li>\n<li><strong>Y (np.ndarray):</strong>  the expected values (outcome)</li>\n<li><strong>nn_architecture (dict):</strong>  neural network definition</li>\n<li><strong>epochs (int):</strong>  the number of backwards propagation loops (default 100)</li>\n<li><strong>learning_rate (float):</strong>  the learning rate for the gradient descent optimization method (default 0.01)</li>\n<li><strong>verbose (bool):</strong>  control the output of debug information (default False)</li>\n<li><strong>callback (typing.Callable):</strong>  callback function that is called at each epoch (deafult None)</li>\n</ul>\n\n<p>Returns\n    dict: the network parameters</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">Y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">nn_architecture</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">epochs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "src.nn.compute_activations": {"fullname": "src.nn.compute_activations", "modulename": "src.nn", "qualname": "compute_activations", "kind": "function", "doc": "<p>Check if the layer nodes are active or not (activation functions is high or low)</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>A (np.ndarray):</strong>  the output of a layer</li>\n<li><strong>activation (str):</strong>  the activation function</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>list: with 1 (high) for activa and 0 for inactive (low)</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">A</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "src.nn.network_size": {"fullname": "src.nn.network_size", "modulename": "src.nn", "qualname": "network_size", "kind": "function", "doc": "<p>Given a network topology it computnes the number of weigths and bias.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>nn_architecture (dict):</strong>  neural network definition</li>\n</ul>\n\n<p>Returns\n    int: the number of weigths and bias</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nn_architecture</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "src.play": {"fullname": "src.play", "modulename": "src.play", "kind": "module", "doc": "<p></p>\n"}, "src.play.load_data": {"fullname": "src.play.load_data", "modulename": "src.play", "qualname": "load_data", "kind": "function", "doc": "<p>Load a json encoded model.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>path(str):</strong>  the location of the model</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>tuple: model definition and parameters</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span>:</span></span>", "funcdef": "def"}, "src.play.player_game": {"fullname": "src.play.player_game", "modulename": "src.play", "qualname": "player_game", "kind": "function", "doc": "<p>Player main loop.</p>\n\n<p>Receives the world dump, and decides if it click of not.\nAlways shares the network information.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>url (str):</strong>  the server url</li>\n<li><strong>model (nn.NN):</strong>  the NN model</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: highscore</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">NN</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "async def"}, "src.play.main": {"fullname": "src.play.main", "modulename": "src.play", "qualname": "main", "kind": "function", "doc": "<p>Main method.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>args (argparse.Namespace):</strong>  the program arguments</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">Namespace</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.train": {"fullname": "src.train", "modulename": "src.train", "kind": "module", "doc": "<p></p>\n"}, "src.train.Optimization": {"fullname": "src.train.Optimization", "modulename": "src.train", "qualname": "Optimization", "kind": "class", "doc": "<p>Enum data type that represents the optimization algorithm</p>\n", "bases": "enum.Enum"}, "src.train.Optimization.de": {"fullname": "src.train.Optimization.de", "modulename": "src.train", "qualname": "Optimization.de", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Optimization.de: &#x27;de&#x27;&gt;"}, "src.train.Optimization.ga": {"fullname": "src.train.Optimization.ga", "modulename": "src.train", "qualname": "Optimization.ga", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Optimization.ga: &#x27;ga&#x27;&gt;"}, "src.train.Optimization.pso": {"fullname": "src.train.Optimization.pso", "modulename": "src.train", "qualname": "Optimization.pso", "kind": "variable", "doc": "<p></p>\n", "default_value": " = &lt;Optimization.pso: &#x27;pso&#x27;&gt;"}, "src.train.player_game": {"fullname": "src.train.player_game", "modulename": "src.train", "qualname": "player_game", "kind": "function", "doc": "<p>Player main loop.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (nn.NN):</strong>  the model used for playing</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: the highscore achieved</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">src</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">NN</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "async def"}, "src.train.objective": {"fullname": "src.train.objective", "modulename": "src.train", "qualname": "objective", "kind": "function", "doc": "<p>Objective function used to evaluate the candidate solution.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>p (np.ndarray):</strong>  the parameters of the candidate solution</li>\n</ul>\n\n<h6 id=\"returns\">Returns:</h6>\n\n<blockquote>\n  <p>float: the cost value</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "src.train.share_training_data": {"fullname": "src.train.share_training_data", "modulename": "src.train", "qualname": "share_training_data", "kind": "function", "doc": "<p>Async method that sends the training data to the viewer. </p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>epoch (int):</strong>  the current epoch</li>\n<li><strong>obj (list):</strong>  list with the current objective values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "async def"}, "src.train.callback": {"fullname": "src.train.callback", "modulename": "src.train", "qualname": "callback", "kind": "function", "doc": "<p>Callback used to share the training data to the viewer.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>epoch (int):</strong>  the current epoch</li>\n<li><strong>obj (list):</strong>  list with the current objective values</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">epoch</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.train.store_data": {"fullname": "src.train.store_data", "modulename": "src.train", "qualname": "store_data", "kind": "function", "doc": "<p>Store the model into a json file.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>model (dict):</strong>  the model definition</li>\n<li><strong>parameters (np.ndarray):</strong>  the model parameters</li>\n<li><strong>path (str):</strong>  the location of the file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "src.train.main": {"fullname": "src.train.main", "modulename": "src.train", "qualname": "main", "kind": "function", "doc": "<p>Main method.</p>\n\n<h6 id=\"arguments\">Arguments:</h6>\n\n<ul>\n<li><strong>args (argparse.Namespace):</strong>  the program arguments</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">Namespace</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"src": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.backend": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.backend.Rect": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "src.backend.Rect.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "src.backend.rect_rect_collision": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 54}, "src.backend.Player": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "src.backend.Player.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 50}, "src.backend.Player.update": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 29}, "src.backend.Pipe": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "src.backend.Pipe.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 35}, "src.backend.Pipe.update": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 29}, "src.backend.Pipe.collisions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 56}, "src.backend.World": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "src.backend.World.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 27}, "src.backend.World.reset": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 7}, "src.backend.World.add_player": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 37}, "src.backend.World.number_players": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 24}, "src.backend.World.player_click": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 25}, "src.backend.World.player_neural_network": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 35}, "src.backend.World.update": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 34}, "src.backend.World.collisions": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 28}, "src.backend.World.update_highscore": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 27}, "src.backend.World.dump": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 22}, "src.backend.GameServer": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "src.backend.GameServer.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 27}, "src.backend.GameServer.incomming_handler": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 32}, "src.backend.GameServer.mainloop": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 32}, "src.backend.main": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 34}, "src.nn": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "src.nn.NN": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 64}, "src.nn.NN.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 88}, "src.nn.NN.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 52}, "src.nn.NN.predict_activations": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 72}, "src.nn.NN.ravel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 28}, "src.nn.NN.update": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 36}, "src.nn.NN.layers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 26}, "src.nn.init_layers": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 63}, "src.nn.sigmoid": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 57}, "src.nn.sigmoid_backward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 62}, "src.nn.relu": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 55}, "src.nn.relu_backward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 62}, "src.nn.swish": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 49}, "src.nn.swish_backward": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 62}, "src.nn.single_layer_forward_propagation": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 99}, "src.nn.full_forward_propagation": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 98}, "src.nn.get_cost_value": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 82}, "src.nn.convert_prob_into_class": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 42}, "src.nn.get_accuracy_value": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 49}, "src.nn.update": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 97}, "src.nn.single_layer_backward_propagation": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 144}, "src.nn.full_backward_propagation": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 156}, "src.nn.train": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 127, "bases": 0, "doc": 152}, "src.nn.compute_activations": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 69}, "src.nn.network_size": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 43}, "src.play": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.play.load_data": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 41}, "src.play.player_game": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 64}, "src.play.main": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}, "src.train": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "src.train.Optimization": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 10}, "src.train.Optimization.de": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "src.train.Optimization.ga": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "src.train.Optimization.pso": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "src.train.player_game": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 39}, "src.train.objective": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 45}, "src.train.share_training_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 43}, "src.train.callback": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 43}, "src.train.store_data": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 50}, "src.train.main": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 23}}, "length": 69, "save": true}, "index": {"qualname": {"root": {"docs": {"src.backend.Rect.__init__": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}}, "df": 6, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Rect": {"tf": 1}, "src.backend.Rect.__init__": {"tf": 1}, "src.backend.rect_rect_collision": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.reset": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.NN.ravel": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Rect.__init__": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 7}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1, "s": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.get_cost_value": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.compute_activations": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.World.player_click": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.train.callback": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Player.update": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 8, "s": {"docs": {"src.backend.World.number_players": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 4}}}}}}}}, "b": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"src.train.Optimization.pso": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.update": {"tf": 1}}, "df": 6}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.World": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.number_players": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.World.dump": {"tf": 1}}, "df": 11}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.World.add_player": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.predict_activations": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.get_accuracy_value": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.World.number_players": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}, "src.nn.network_size": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.NN.layers": {"tf": 1}}, "df": 7}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.World.update_highscore": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"src.backend.World.dump": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"src.play.load_data": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"src.train.Optimization.de": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "a": {"docs": {"src.train.Optimization.ga": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.GameServer": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2, "s": {"docs": {"src.nn.NN.layers": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.play.load_data": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.network_size": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.train.share_training_data": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.train.store_data": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 5}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.full_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.train.share_training_data": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.train.Optimization": {"tf": 1}, "src.train.Optimization.de": {"tf": 1}, "src.train.Optimization.ga": {"tf": 1}, "src.train.Optimization.pso": {"tf": 1}}, "df": 4}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.train.objective": {"tf": 1}}, "df": 1}}}}}}}}}}}, "fullname": {"root": {"docs": {"src.backend.Rect.__init__": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"src": {"tf": 1}, "src.backend": {"tf": 1}, "src.backend.Rect": {"tf": 1}, "src.backend.Rect.__init__": {"tf": 1}, "src.backend.rect_rect_collision": {"tf": 1}, "src.backend.Player": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.number_players": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.World.dump": {"tf": 1}, "src.backend.GameServer": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.NN.layers": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.play": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train": {"tf": 1}, "src.train.Optimization": {"tf": 1}, "src.train.Optimization.de": {"tf": 1}, "src.train.Optimization.ga": {"tf": 1}, "src.train.Optimization.pso": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}, "src.train.store_data": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 69}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.network_size": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.train.share_training_data": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.train.store_data": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.backend": {"tf": 1}, "src.backend.Rect": {"tf": 1}, "src.backend.Rect.__init__": {"tf": 1}, "src.backend.rect_rect_collision": {"tf": 1}, "src.backend.Player": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.number_players": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.World.dump": {"tf": 1}, "src.backend.GameServer": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}}, "df": 27}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 5}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Rect": {"tf": 1}, "src.backend.Rect.__init__": {"tf": 1}, "src.backend.rect_rect_collision": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.reset": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.NN.ravel": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Rect.__init__": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 7}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1, "s": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.get_cost_value": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.compute_activations": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.World.player_click": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.train.callback": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"src.play": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.play.main": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Player.update": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 8, "s": {"docs": {"src.backend.World.number_players": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 4}}}}}}}}, "b": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"src.train.Optimization.pso": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.update": {"tf": 1}}, "df": 6}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.World": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.number_players": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.World.dump": {"tf": 1}}, "df": 11}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.World.add_player": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.predict_activations": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.get_accuracy_value": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.World.number_players": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}, "src.nn.network_size": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {"src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.NN.predict": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1.4142135623730951}, "src.nn.NN.ravel": {"tf": 1.4142135623730951}, "src.nn.NN.update": {"tf": 1.4142135623730951}, "src.nn.NN.layers": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.nn.network_size": {"tf": 1}}, "df": 26}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.World.update_highscore": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"src.backend.World.dump": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"src.play.load_data": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"src.train.Optimization.de": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "a": {"docs": {"src.train.Optimization.ga": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.GameServer": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2, "s": {"docs": {"src.nn.NN.layers": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.play.load_data": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.full_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.train": {"tf": 1}, "src.train": {"tf": 1}, "src.train.Optimization": {"tf": 1}, "src.train.Optimization.de": {"tf": 1}, "src.train.Optimization.ga": {"tf": 1}, "src.train.Optimization.pso": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}, "src.train.store_data": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.train.share_training_data": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.train.Optimization": {"tf": 1}, "src.train.Optimization.de": {"tf": 1}, "src.train.Optimization.ga": {"tf": 1}, "src.train.Optimization.pso": {"tf": 1}}, "df": 4}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.train.objective": {"tf": 1}}, "df": 1}}}}}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"src.train.Optimization.de": {"tf": 1.4142135623730951}, "src.train.Optimization.ga": {"tf": 1.4142135623730951}, "src.train.Optimization.pso": {"tf": 1.4142135623730951}}, "df": 3, "l": {"docs": {}, "df": 0, "t": {"docs": {"src.train.Optimization.de": {"tf": 1}, "src.train.Optimization.ga": {"tf": 1}, "src.train.Optimization.pso": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.train.Optimization.de": {"tf": 1}, "src.train.Optimization.ga": {"tf": 1}, "src.train.Optimization.pso": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"src.train.Optimization.de": {"tf": 1.4142135623730951}}, "df": 1}}, "x": {"2": {"7": {"docs": {"src.train.Optimization.de": {"tf": 1.4142135623730951}, "src.train.Optimization.ga": {"tf": 1.4142135623730951}, "src.train.Optimization.pso": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "g": {"docs": {}, "df": 0, "t": {"docs": {"src.train.Optimization.de": {"tf": 1}, "src.train.Optimization.ga": {"tf": 1}, "src.train.Optimization.pso": {"tf": 1}}, "df": 3}, "a": {"docs": {"src.train.Optimization.ga": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"src.train.Optimization.pso": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "signature": {"root": {"0": {"1": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}, "3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"3": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"src.backend.Rect.__init__": {"tf": 2}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 6}, "1": {"0": {"0": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"0": {"docs": {"src.backend.Player.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"0": {"docs": {"src.backend.Player.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"9": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "4": {"2": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"src.backend.Rect.__init__": {"tf": 7.745966692414834}, "src.backend.rect_rect_collision": {"tf": 6.324555320336759}, "src.backend.Player.__init__": {"tf": 6.324555320336759}, "src.backend.Player.update": {"tf": 5.0990195135927845}, "src.backend.Pipe.__init__": {"tf": 4.47213595499958}, "src.backend.Pipe.update": {"tf": 5.0990195135927845}, "src.backend.Pipe.collisions": {"tf": 5.291502622129181}, "src.backend.World.__init__": {"tf": 4.242640687119285}, "src.backend.World.reset": {"tf": 3.4641016151377544}, "src.backend.World.add_player": {"tf": 4.898979485566356}, "src.backend.World.number_players": {"tf": 3.4641016151377544}, "src.backend.World.player_click": {"tf": 4}, "src.backend.World.player_neural_network": {"tf": 4.47213595499958}, "src.backend.World.update": {"tf": 5.0990195135927845}, "src.backend.World.collisions": {"tf": 3.4641016151377544}, "src.backend.World.update_highscore": {"tf": 5.0990195135927845}, "src.backend.World.dump": {"tf": 3.4641016151377544}, "src.backend.GameServer.__init__": {"tf": 3.4641016151377544}, "src.backend.GameServer.incomming_handler": {"tf": 4.898979485566356}, "src.backend.GameServer.mainloop": {"tf": 4.898979485566356}, "src.backend.main": {"tf": 4.47213595499958}, "src.nn.NN.__init__": {"tf": 5.0990195135927845}, "src.nn.NN.predict": {"tf": 5.291502622129181}, "src.nn.NN.predict_activations": {"tf": 4.898979485566356}, "src.nn.NN.ravel": {"tf": 4}, "src.nn.NN.update": {"tf": 4.898979485566356}, "src.nn.NN.layers": {"tf": 3.4641016151377544}, "src.nn.init_layers": {"tf": 5.477225575051661}, "src.nn.sigmoid": {"tf": 4.898979485566356}, "src.nn.sigmoid_backward": {"tf": 6}, "src.nn.relu": {"tf": 4.898979485566356}, "src.nn.relu_backward": {"tf": 6}, "src.nn.swish": {"tf": 4.898979485566356}, "src.nn.swish_backward": {"tf": 6}, "src.nn.single_layer_forward_propagation": {"tf": 8.246211251235321}, "src.nn.full_forward_propagation": {"tf": 6}, "src.nn.get_cost_value": {"tf": 6}, "src.nn.convert_prob_into_class": {"tf": 4.898979485566356}, "src.nn.get_accuracy_value": {"tf": 5.656854249492381}, "src.nn.update": {"tf": 6.6332495807108}, "src.nn.single_layer_backward_propagation": {"tf": 9.486832980505138}, "src.nn.full_backward_propagation": {"tf": 7.810249675906654}, "src.nn.train": {"tf": 10.14889156509222}, "src.nn.compute_activations": {"tf": 5.291502622129181}, "src.nn.network_size": {"tf": 4}, "src.play.load_data": {"tf": 4}, "src.play.player_game": {"tf": 5.656854249492381}, "src.play.main": {"tf": 4.47213595499958}, "src.train.player_game": {"tf": 4.898979485566356}, "src.train.objective": {"tf": 4.47213595499958}, "src.train.share_training_data": {"tf": 4.898979485566356}, "src.train.callback": {"tf": 4.898979485566356}, "src.train.store_data": {"tf": 6}, "src.train.main": {"tf": 4.47213595499958}}, "df": 54, "x": {"docs": {"src.backend.Rect.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Rect.__init__": {"tf": 2}, "src.backend.Player.__init__": {"tf": 1.4142135623730951}, "src.backend.Pipe.__init__": {"tf": 1.4142135623730951}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.number_players": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 11}}}, "y": {"docs": {"src.backend.Rect.__init__": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1.4142135623730951}, "src.nn.get_accuracy_value": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}}, "df": 5}, "w": {"docs": {"src.backend.Rect.__init__": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {"src.backend.Rect.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 3}}}, "r": {"1": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}, "2": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.rect_rect_collision": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"src.backend.rect_rect_collision": {"tf": 1.4142135623730951}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 9}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.number_players": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.World.dump": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.NN.layers": {"tf": 1}}, "df": 19}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.rect_rect_collision": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"src.play.player_game": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"src.train.objective": {"tf": 1}}, "df": 1, "x": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}}, "df": 2}, "y": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.update": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.train.store_data": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.dump": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1.4142135623730951}, "src.nn.full_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.update": {"tf": 2}, "src.nn.full_backward_propagation": {"tf": 2}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.network_size": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 10}}}, "a": {"docs": {"src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}}, "df": 10}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}, "src.train.store_data": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 18}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 4}}}}}}}}, "n": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.play.player_game": {"tf": 1.4142135623730951}, "src.train.player_game": {"tf": 1.4142135623730951}}, "df": 9}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.NN.predict": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.sigmoid": {"tf": 1.4142135623730951}, "src.nn.sigmoid_backward": {"tf": 1.7320508075688772}, "src.nn.relu": {"tf": 1.4142135623730951}, "src.nn.relu_backward": {"tf": 1.7320508075688772}, "src.nn.swish": {"tf": 1.4142135623730951}, "src.nn.swish_backward": {"tf": 1.7320508075688772}, "src.nn.single_layer_forward_propagation": {"tf": 2}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1.7320508075688772}, "src.nn.convert_prob_into_class": {"tf": 1.4142135623730951}, "src.nn.get_accuracy_value": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 2.23606797749979}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 21}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.NN.predict": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.sigmoid": {"tf": 1.4142135623730951}, "src.nn.sigmoid_backward": {"tf": 1.7320508075688772}, "src.nn.relu": {"tf": 1.4142135623730951}, "src.nn.relu_backward": {"tf": 1.7320508075688772}, "src.nn.swish": {"tf": 1.4142135623730951}, "src.nn.swish_backward": {"tf": 1.7320508075688772}, "src.nn.single_layer_forward_propagation": {"tf": 2}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1.7320508075688772}, "src.nn.convert_prob_into_class": {"tf": 1.4142135623730951}, "src.nn.get_accuracy_value": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 2.23606797749979}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 21}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Pipe.collisions": {"tf": 1.4142135623730951}, "src.backend.World.collisions": {"tf": 1}, "src.nn.NN.layers": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}}, "df": 7}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 3}}}}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.NN.predict_activations": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.play.load_data": {"tf": 1}}, "df": 4}}}}}, "z": {"docs": {"src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 7}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 2}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.update": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 2, "s": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {"src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 2}}}}}, "bases": {"root": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"src.train.Optimization": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "doc": {"root": {"0": {"1": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}, "docs": {"src.nn.relu": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 3}, "1": {"0": {"0": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"0": {"docs": {"src.backend.Player.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1.7320508075688772}, "src.nn.compute_activations": {"tf": 1}}, "df": 4, "/": {"3": {"0": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "d": {"docs": {"src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1.4142135623730951}, "src.nn.NN.update": {"tf": 1.4142135623730951}, "src.nn.sigmoid": {"tf": 1.7320508075688772}, "src.nn.sigmoid_backward": {"tf": 1.4142135623730951}, "src.nn.relu": {"tf": 1.7320508075688772}, "src.nn.relu_backward": {"tf": 1.4142135623730951}, "src.nn.swish": {"tf": 1.7320508075688772}, "src.nn.swish_backward": {"tf": 1.4142135623730951}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 13}}, "2": {"0": {"0": {"docs": {"src.backend.Player.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"src.nn.NN.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "4": {"docs": {"src.nn.NN.__init__": {"tf": 1}}, "df": 1}, "docs": {"src": {"tf": 1.7320508075688772}, "src.backend": {"tf": 1.7320508075688772}, "src.backend.Rect": {"tf": 1.7320508075688772}, "src.backend.Rect.__init__": {"tf": 1.7320508075688772}, "src.backend.rect_rect_collision": {"tf": 5.196152422706632}, "src.backend.Player": {"tf": 1.7320508075688772}, "src.backend.Player.__init__": {"tf": 5.0990195135927845}, "src.backend.Player.update": {"tf": 3.872983346207417}, "src.backend.Pipe": {"tf": 1.7320508075688772}, "src.backend.Pipe.__init__": {"tf": 4.358898943540674}, "src.backend.Pipe.update": {"tf": 3.872983346207417}, "src.backend.Pipe.collisions": {"tf": 5.196152422706632}, "src.backend.World": {"tf": 1.7320508075688772}, "src.backend.World.__init__": {"tf": 3.7416573867739413}, "src.backend.World.reset": {"tf": 1.7320508075688772}, "src.backend.World.add_player": {"tf": 4.242640687119285}, "src.backend.World.number_players": {"tf": 3.3166247903554}, "src.backend.World.player_click": {"tf": 3.605551275463989}, "src.backend.World.player_neural_network": {"tf": 3.7416573867739413}, "src.backend.World.update": {"tf": 3.872983346207417}, "src.backend.World.collisions": {"tf": 3.1622776601683795}, "src.backend.World.update_highscore": {"tf": 3.7416573867739413}, "src.backend.World.dump": {"tf": 3.3166247903554}, "src.backend.GameServer": {"tf": 1.7320508075688772}, "src.backend.GameServer.__init__": {"tf": 3.7416573867739413}, "src.backend.GameServer.incomming_handler": {"tf": 4.242640687119285}, "src.backend.GameServer.mainloop": {"tf": 3.7416573867739413}, "src.backend.main": {"tf": 4.123105625617661}, "src.nn": {"tf": 1.7320508075688772}, "src.nn.NN": {"tf": 2.449489742783178}, "src.nn.NN.__init__": {"tf": 6.164414002968976}, "src.nn.NN.predict": {"tf": 4.69041575982343}, "src.nn.NN.predict_activations": {"tf": 4.69041575982343}, "src.nn.NN.ravel": {"tf": 3.3166247903554}, "src.nn.NN.update": {"tf": 3.7416573867739413}, "src.nn.NN.layers": {"tf": 3.3166247903554}, "src.nn.init_layers": {"tf": 5.196152422706632}, "src.nn.sigmoid": {"tf": 4.898979485566356}, "src.nn.sigmoid_backward": {"tf": 5.196152422706632}, "src.nn.relu": {"tf": 4.795831523312719}, "src.nn.relu_backward": {"tf": 5.196152422706632}, "src.nn.swish": {"tf": 4.69041575982343}, "src.nn.swish_backward": {"tf": 5.196152422706632}, "src.nn.single_layer_forward_propagation": {"tf": 7}, "src.nn.full_forward_propagation": {"tf": 6.6332495807108}, "src.nn.get_cost_value": {"tf": 6}, "src.nn.convert_prob_into_class": {"tf": 4.58257569495584}, "src.nn.get_accuracy_value": {"tf": 5.196152422706632}, "src.nn.update": {"tf": 6.164414002968976}, "src.nn.single_layer_backward_propagation": {"tf": 7.14142842854285}, "src.nn.full_backward_propagation": {"tf": 7}, "src.nn.train": {"tf": 7.14142842854285}, "src.nn.compute_activations": {"tf": 5.291502622129181}, "src.nn.network_size": {"tf": 4}, "src.play": {"tf": 1.7320508075688772}, "src.play.load_data": {"tf": 4.69041575982343}, "src.play.player_game": {"tf": 5.477225575051661}, "src.play.main": {"tf": 3.7416573867739413}, "src.train": {"tf": 1.7320508075688772}, "src.train.Optimization": {"tf": 1.4142135623730951}, "src.train.Optimization.de": {"tf": 1.7320508075688772}, "src.train.Optimization.ga": {"tf": 1.7320508075688772}, "src.train.Optimization.pso": {"tf": 1.7320508075688772}, "src.train.player_game": {"tf": 4.69041575982343}, "src.train.objective": {"tf": 4.69041575982343}, "src.train.share_training_data": {"tf": 4.358898943540674}, "src.train.callback": {"tf": 4.358898943540674}, "src.train.store_data": {"tf": 4.898979485566356}, "src.train.main": {"tf": 3.7416573867739413}}, "df": 69, "d": {"docs": {}, "df": 0, "a": {"docs": {"src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "a": {"docs": {"src.backend.Rect": {"tf": 1.4142135623730951}, "src.backend.World.player_neural_network": {"tf": 1}, "src.train.Optimization": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Player.__init__": {"tf": 1.4142135623730951}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1.7320508075688772}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.World.player_neural_network": {"tf": 1.4142135623730951}, "src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1.4142135623730951}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 5, "s": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}}, "df": 3}}}}, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.full_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.play.player_game": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"src.play.player_game": {"tf": 1}}, "df": 1, "s": {"docs": {"src.backend.World.dump": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.dump": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1.4142135623730951}, "src.nn.full_forward_propagation": {"tf": 1.7320508075688772}, "src.nn.update": {"tf": 2}, "src.nn.full_backward_propagation": {"tf": 2}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.network_size": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.backend.World.dump": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}}}}}}}}, "m": {"docs": {"src.nn.NN.__init__": {"tf": 2}}, "df": 1}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.Rect": {"tf": 1}, "src.backend.Player": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.backend.World": {"tf": 1}, "src.backend.GameServer": {"tf": 1}, "src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.World.player_click": {"tf": 1}, "src.play.player_game": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.Rect": {"tf": 1}, "src.backend.rect_rect_collision": {"tf": 1.4142135623730951}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.Pipe.collisions": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.World.collisions": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}}, "df": 10}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.network_size": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player.__init__": {"tf": null}, "src.backend.Pipe.__init__": {"tf": null}, "src.backend.World.__init__": {"tf": null}, "src.backend.GameServer.__init__": {"tf": null}, "src.nn.NN.__init__": {"tf": null}}, "df": 5}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.World": {"tf": 1}, "src.nn.NN.update": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.dump": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.get_cost_value": {"tf": 1.4142135623730951}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.train.objective": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}}, "n": {"docs": {"src.nn": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.train.objective": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2, "d": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.nn.train": {"tf": 1.4142135623730951}, "src.train.callback": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 2}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.number_players": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.train.share_training_data": {"tf": 1.4142135623730951}, "src.train.callback": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.init_layers": {"tf": 1}}, "df": 1}, "d": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.get_cost_value": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1, "d": {"docs": {"src.backend.Rect": {"tf": 1.4142135623730951}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 10}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.update": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.World.update_highscore": {"tf": 1}, "src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.update": {"tf": 1}}, "df": 3, "s": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"src.play.player_game": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"src.backend.Rect": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}, "src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.update": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1.7320508075688772}, "src.train.objective": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1.4142135623730951}}, "df": 11, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.network_size": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Rect": {"tf": 1.4142135623730951}, "src.backend.rect_rect_collision": {"tf": 1.7320508075688772}, "src.backend.Player": {"tf": 1}, "src.backend.Player.update": {"tf": 1.4142135623730951}, "src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1.4142135623730951}, "src.backend.Pipe.collisions": {"tf": 1.7320508075688772}, "src.backend.World": {"tf": 1.4142135623730951}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1.4142135623730951}, "src.backend.World.number_players": {"tf": 1}, "src.backend.World.player_click": {"tf": 1.4142135623730951}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 2}, "src.backend.World.collisions": {"tf": 1.7320508075688772}, "src.backend.World.update_highscore": {"tf": 1.4142135623730951}, "src.backend.World.dump": {"tf": 1}, "src.backend.GameServer": {"tf": 1.4142135623730951}, "src.backend.GameServer.incomming_handler": {"tf": 1.4142135623730951}, "src.backend.GameServer.mainloop": {"tf": 2}, "src.backend.main": {"tf": 1.7320508075688772}, "src.nn.NN": {"tf": 2}, "src.nn.NN.__init__": {"tf": 2}, "src.nn.NN.predict": {"tf": 2.23606797749979}, "src.nn.NN.predict_activations": {"tf": 2.6457513110645907}, "src.nn.NN.ravel": {"tf": 1.4142135623730951}, "src.nn.NN.update": {"tf": 1.4142135623730951}, "src.nn.NN.layers": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1.7320508075688772}, "src.nn.sigmoid": {"tf": 1.7320508075688772}, "src.nn.sigmoid_backward": {"tf": 2.23606797749979}, "src.nn.relu": {"tf": 1.7320508075688772}, "src.nn.relu_backward": {"tf": 2.23606797749979}, "src.nn.swish": {"tf": 1.7320508075688772}, "src.nn.swish_backward": {"tf": 2.23606797749979}, "src.nn.single_layer_forward_propagation": {"tf": 2.449489742783178}, "src.nn.full_forward_propagation": {"tf": 2.23606797749979}, "src.nn.get_cost_value": {"tf": 1.4142135623730951}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1.7320508075688772}, "src.nn.update": {"tf": 2.23606797749979}, "src.nn.single_layer_backward_propagation": {"tf": 3.605551275463989}, "src.nn.full_backward_propagation": {"tf": 3.1622776601683795}, "src.nn.train": {"tf": 3.605551275463989}, "src.nn.compute_activations": {"tf": 1.7320508075688772}, "src.nn.network_size": {"tf": 1.4142135623730951}, "src.play.load_data": {"tf": 1.4142135623730951}, "src.play.player_game": {"tf": 2}, "src.play.main": {"tf": 1}, "src.train.Optimization": {"tf": 1}, "src.train.player_game": {"tf": 1.4142135623730951}, "src.train.objective": {"tf": 2}, "src.train.share_training_data": {"tf": 2}, "src.train.callback": {"tf": 2}, "src.train.store_data": {"tf": 2.23606797749979}, "src.train.main": {"tf": 1}}, "df": 56, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}}, "n": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Player": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.GameServer": {"tf": 1}, "src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.nn.train": {"tf": 1.4142135623730951}, "src.train.Optimization": {"tf": 1}, "src.train.share_training_data": {"tf": 1}}, "df": 18}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}, "src.nn.NN": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.train": {"tf": 1.4142135623730951}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.NN.predict_activations": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.play.load_data": {"tf": 1}}, "df": 3, "s": {"docs": {"src.nn.full_forward_propagation": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"src.train.Optimization": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.Rect": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Pipe.collisions": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.World.collisions": {"tf": 1}}, "df": 1}}, "s": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}, "t": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 3, "{": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.get_cost_value": {"tf": 2}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"src.nn.compute_activations": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.World.update_highscore": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}}}, "r": {"1": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}, "2": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.rect_rect_collision": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Rect": {"tf": 1}, "src.backend.rect_rect_collision": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN": {"tf": 1}, "src.play.player_game": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.number_players": {"tf": 1.4142135623730951}, "src.backend.World.collisions": {"tf": 1}, "src.backend.World.dump": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1.4142135623730951}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.layers": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}}, "df": 31}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.Player": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.train.Optimization": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.reset": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 3, "s": {"docs": {"src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.World.collisions": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.relu": {"tf": 1.7320508075688772}, "src.nn.relu_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.NN": {"tf": 1.4142135623730951}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.update": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"src.nn.get_cost_value": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {"src.backend.Rect": {"tf": 1}, "src.backend.rect_rect_collision": {"tf": 1}, "src.backend.Player": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.backend.World": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 8, "t": {"docs": {"src.backend.Player.__init__": {"tf": 1.4142135623730951}, "src.backend.Pipe.__init__": {"tf": 1.4142135623730951}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.number_players": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 10, "o": {"docs": {"src.backend.World.dump": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.backend.Player.__init__": {"tf": 1.4142135623730951}, "src.backend.Pipe.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.init_layers": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.player_click": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 12}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.backend.GameServer": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.train": {"tf": 1}, "src.play.player_game": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.compute_activations": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {"src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.World.add_player": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "f": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.play.player_game": {"tf": 1}}, "df": 4}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.nn": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}}, "df": 3}}}}}}}}}, "s": {"docs": {"src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}}, "df": 9}, "t": {"docs": {"src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.play.player_game": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"src.backend.Player": {"tf": 1.4142135623730951}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.dump": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn": {"tf": 1.7320508075688772}, "src.nn.NN": {"tf": 2}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1.4142135623730951}, "src.nn.NN.ravel": {"tf": 1.4142135623730951}, "src.nn.NN.update": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1.4142135623730951}, "src.nn.sigmoid": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1.7320508075688772}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1.4142135623730951}, "src.nn.network_size": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 28, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"src.backend.Rect": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.train.Optimization": {"tf": 1}}, "df": 9}}}}}}}, "l": {"docs": {"src.backend.World": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "o": {"docs": {"src.nn.NN.predict_activations": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"src.play.player_game": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1.4142135623730951}, "src.backend.main": {"tf": 1.4142135623730951}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.play.main": {"tf": 1.4142135623730951}, "src.train.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}, "src.train.store_data": {"tf": 1}, "src.train.main": {"tf": 1.4142135623730951}}, "df": 47}}}}}}, "s": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 4}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}}, "df": 7}}}}}}}}}}, "e": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 2}}, "n": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1, "y": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}}, "df": 1}, "d": {"docs": {"src.backend.World": {"tf": 1}, "src.backend.World.player_neural_network": {"tf": 1.4142135623730951}, "src.backend.World.update": {"tf": 1}, "src.backend.GameServer": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.nn.network_size": {"tf": 1.4142135623730951}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}}, "df": 18}, "n": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.number_players": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}}, "df": 3}, "a": {"docs": {"src.nn.compute_activations": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.World.player_neural_network": {"tf": 1.4142135623730951}, "src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.single_layer_forward_propagation": {"tf": 1.7320508075688772}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 2}, "src.nn.compute_activations": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"src.nn.NN.predict_activations": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.get_accuracy_value": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.train.player_game": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.World.add_player": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 2, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"src.backend.main": {"tf": 1}, "src.train.share_training_data": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"src.backend.rect_rect_collision": {"tf": 1.4142135623730951}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.number_players": {"tf": 1.4142135623730951}, "src.backend.World.update": {"tf": 1.4142135623730951}, "src.backend.World.update_highscore": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1}, "src.nn": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 2}, "src.nn.NN.update": {"tf": 1}, "src.nn.NN.layers": {"tf": 1.4142135623730951}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1.4142135623730951}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1.4142135623730951}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1.4142135623730951}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 2.23606797749979}, "src.nn.full_backward_propagation": {"tf": 1.7320508075688772}, "src.nn.train": {"tf": 2.23606797749979}, "src.nn.compute_activations": {"tf": 1}, "src.nn.network_size": {"tf": 1.4142135623730951}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 32, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"src.train.objective": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"src.backend.World.__init__": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.compute_activations": {"tf": 1.4142135623730951}}, "df": 4}, "n": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.train.Optimization": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.update": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.sigmoid": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.swish": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}}, "df": 6}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.train.callback": {"tf": 1}}, "df": 1, "s": {"docs": {"src.play.player_game": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.main": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1.4142135623730951}}, "df": 2}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.play.player_game": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"src.train.share_training_data": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 9}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.World.reset": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"src.nn.sigmoid_backward": {"tf": 1.4142135623730951}, "src.nn.relu_backward": {"tf": 1.4142135623730951}, "src.nn.swish_backward": {"tf": 1.4142135623730951}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"src.train.store_data": {"tf": 1}}, "df": 1, "s": {"docs": {"src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.sigmoid": {"tf": 1.4142135623730951}, "src.nn.sigmoid_backward": {"tf": 1}}, "df": 3}}}, "a": {"docs": {"src.nn.sigmoid": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"src.nn.swish": {"tf": 1.4142135623730951}, "src.nn.swish_backward": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "i": {"docs": {"src.nn.get_cost_value": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.train.objective": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"src.train.store_data": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"src.backend.Player": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"src.backend.World.player_click": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.objective": {"tf": 1}}, "df": 10}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn": {"tf": 1.4142135623730951}, "src.nn.NN.__init__": {"tf": 1.4142135623730951}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}, "src.nn.compute_activations": {"tf": 1.4142135623730951}, "src.train.player_game": {"tf": 1}}, "df": 22, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 5}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}}, "df": 4}}, "c": {"docs": {}, "df": 0, "{": {"1": {"docs": {"src.nn.sigmoid": {"tf": 1}}, "df": 1, "}": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "m": {"docs": {"src.nn.get_cost_value": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1}, "src.nn.convert_prob_into_class": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.7320508075688772}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}, "src.train.objective": {"tf": 1}}, "df": 16, "s": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}}}}}}}}}, "b": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"src.backend.rect_rect_collision": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.Player": {"tf": 1}}, "df": 1, "s": {"docs": {"src.backend.World": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.update": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.network_size": {"tf": 1.4142135623730951}}, "df": 7}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.get_cost_value": {"tf": 1.4142135623730951}, "src.nn.convert_prob_into_class": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1.4142135623730951}, "src.nn.relu_backward": {"tf": 1.4142135623730951}, "src.nn.swish_backward": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1, "s": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {"src.train.objective": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.Player": {"tf": 1}, "src.backend.Player.__init__": {"tf": 1}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1}, "src.backend.World.add_player": {"tf": 1.4142135623730951}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 9, "s": {"docs": {"src.backend.Pipe.collisions": {"tf": 1.7320508075688772}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.number_players": {"tf": 1.4142135623730951}, "src.backend.World.player_click": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.train.player_game": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.Player.__init__": {"tf": 1.4142135623730951}, "src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1.4142135623730951}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}}, "df": 5}}}}}}}, "y": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Pipe": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.Pipe.collisions": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"src.backend.World": {"tf": 1}, "src.backend.World.__init__": {"tf": 1.4142135623730951}, "src.backend.World.update": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.backend.GameServer.incomming_handler": {"tf": 1.4142135623730951}, "src.play.load_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.update": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.init_layers": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 2}, "src.nn.full_backward_propagation": {"tf": 1.7320508075688772}, "src.nn.train": {"tf": 1}, "src.play.load_data": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.store_data": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}}, "df": 6}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"src.nn.convert_prob_into_class": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.NN.layers": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.nn": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.Player": {"tf": 1}, "src.backend.Pipe": {"tf": 1}, "src.backend.GameServer": {"tf": 1}, "src.backend.GameServer.mainloop": {"tf": 1.4142135623730951}, "src.backend.main": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.GameServer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.NN.__init__": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.init_layers": {"tf": 1}, "src.nn.network_size": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.nn.update": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.update": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.update": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 3}}}}}}}}, "x": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 6}, "y": {"docs": {"src.backend.Player.__init__": {"tf": 1}, "src.backend.Pipe.__init__": {"tf": 1}, "src.nn.get_cost_value": {"tf": 2.23606797749979}, "src.nn.get_accuracy_value": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}}, "df": 6, "\\": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.get_cost_value": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"src.nn.sigmoid": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"src.backend.Player.update": {"tf": 1}, "src.backend.Pipe.update": {"tf": 1}, "src.backend.World.update": {"tf": 1}, "src.backend.World.update_highscore": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.World": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.get_cost_value": {"tf": 1}, "src.nn.get_accuracy_value": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"src.play.load_data": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"src.train.Optimization": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"src.nn.train": {"tf": 1}, "src.train.share_training_data": {"tf": 1.4142135623730951}, "src.train.callback": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"src.train.objective": {"tf": 1}}, "df": 1}}}}}}}}, "w": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"src.backend.Pipe.collisions": {"tf": 1.4142135623730951}, "src.backend.World.__init__": {"tf": 1.4142135623730951}, "src.backend.World.collisions": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.sigmoid": {"tf": 1}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.7320508075688772}, "src.nn.compute_activations": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 17, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.__init__": {"tf": 1}, "src.backend.GameServer.__init__": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.Pipe.collisions": {"tf": 1.4142135623730951}, "src.backend.World": {"tf": 1}, "src.backend.World.__init__": {"tf": 1}, "src.backend.World.reset": {"tf": 1}, "src.backend.World.add_player": {"tf": 1}, "src.backend.World.collisions": {"tf": 1}, "src.backend.World.dump": {"tf": 1.4142135623730951}, "src.play.player_game": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {"src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}}, "df": 2}, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}}, "df": 2, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.World.add_player": {"tf": 1}, "src.backend.World.player_click": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.main": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN.update": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 7}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.network_size": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"src.nn.get_cost_value": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"src.backend.Pipe.collisions": {"tf": 1.7320508075688772}, "src.backend.World.collisions": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.layers": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.train.share_training_data": {"tf": 1.4142135623730951}, "src.train.callback": {"tf": 1.4142135623730951}}, "df": 7}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1.4142135623730951}, "src.backend.main": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.train.player_game": {"tf": 1}}, "df": 4, "s": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"src.play.load_data": {"tf": 1}}, "df": 1, "s": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.NN.update": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"src.nn.get_cost_value": {"tf": 1}}, "df": 1}, "w": {"docs": {"src.nn.compute_activations": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.play.load_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.NN.layers": {"tf": 1.4142135623730951}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}, "src.nn.compute_activations": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"src.nn.full_backward_propagation": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"src.nn.update": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"src.backend.World.add_player": {"tf": 1}, "src.nn.init_layers": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"src.backend.World.player_neural_network": {"tf": 1.7320508075688772}, "src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.NN.__init__": {"tf": 1}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.init_layers": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}}, "df": 12}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"src.backend.World.player_neural_network": {"tf": 1.7320508075688772}, "src.nn": {"tf": 1}, "src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.NN.__init__": {"tf": 1.7320508075688772}, "src.nn.NN.predict": {"tf": 1.7320508075688772}, "src.nn.NN.predict_activations": {"tf": 1.7320508075688772}, "src.nn.NN.ravel": {"tf": 1.4142135623730951}, "src.nn.NN.update": {"tf": 1.4142135623730951}, "src.nn.init_layers": {"tf": 2.23606797749979}, "src.nn.full_forward_propagation": {"tf": 2}, "src.nn.update": {"tf": 2}, "src.nn.full_backward_propagation": {"tf": 1.7320508075688772}, "src.nn.train": {"tf": 1.7320508075688772}, "src.nn.network_size": {"tf": 1.4142135623730951}, "src.play.player_game": {"tf": 1}}, "df": 15}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.World.number_players": {"tf": 1.4142135623730951}, "src.nn.NN.layers": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.NN.__init__": {"tf": 1.7320508075688772}, "src.nn.init_layers": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.update": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}, "src.nn.network_size": {"tf": 1}, "src.play.player_game": {"tf": 1.7320508075688772}, "src.train.player_game": {"tf": 1.4142135623730951}}, "df": 10}, "o": {"docs": {}, "df": 0, "t": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.compute_activations": {"tf": 1}, "src.play.player_game": {"tf": 1}}, "df": 3}, "d": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.NN.predict_activations": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"src.nn.NN.layers": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}}, "df": 2, "e": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"src.nn.NN.predict": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.sigmoid": {"tf": 1.4142135623730951}, "src.nn.sigmoid_backward": {"tf": 1.7320508075688772}, "src.nn.relu": {"tf": 1.4142135623730951}, "src.nn.relu_backward": {"tf": 1.7320508075688772}, "src.nn.swish": {"tf": 1.4142135623730951}, "src.nn.swish_backward": {"tf": 1.7320508075688772}, "src.nn.single_layer_forward_propagation": {"tf": 2}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1.7320508075688772}, "src.nn.convert_prob_into_class": {"tf": 1.4142135623730951}, "src.nn.get_accuracy_value": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 2.23606797749979}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 21}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.NN.predict": {"tf": 1.4142135623730951}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1}, "src.nn.NN.update": {"tf": 1}, "src.nn.sigmoid": {"tf": 1.4142135623730951}, "src.nn.sigmoid_backward": {"tf": 1.7320508075688772}, "src.nn.relu": {"tf": 1.4142135623730951}, "src.nn.relu_backward": {"tf": 1.7320508075688772}, "src.nn.swish": {"tf": 1.4142135623730951}, "src.nn.swish_backward": {"tf": 1.7320508075688772}, "src.nn.single_layer_forward_propagation": {"tf": 2}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1.7320508075688772}, "src.nn.convert_prob_into_class": {"tf": 1.4142135623730951}, "src.nn.get_accuracy_value": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 2.23606797749979}, "src.nn.full_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1.4142135623730951}, "src.nn.compute_activations": {"tf": 1}, "src.train.objective": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 21}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.backend.World.player_neural_network": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.nn.NN.predict_activations": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"src.nn.NN": {"tf": 1.4142135623730951}, "src.nn.NN.predict": {"tf": 1}, "src.nn.NN.predict_activations": {"tf": 1}, "src.nn.NN.ravel": {"tf": 1.4142135623730951}, "src.nn.NN.update": {"tf": 1.4142135623730951}, "src.nn.sigmoid": {"tf": 1.7320508075688772}, "src.nn.sigmoid_backward": {"tf": 1.4142135623730951}, "src.nn.relu": {"tf": 1.7320508075688772}, "src.nn.relu_backward": {"tf": 1.4142135623730951}, "src.nn.swish": {"tf": 1.7320508075688772}, "src.nn.swish_backward": {"tf": 1.4142135623730951}, "src.nn.single_layer_forward_propagation": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}, "src.nn.train": {"tf": 1}}, "df": 15}}}}, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"src.nn.get_accuracy_value": {"tf": 1}, "src.train.objective": {"tf": 1}}, "df": 2, "s": {"docs": {"src.nn.NN": {"tf": 1}, "src.nn.full_forward_propagation": {"tf": 1}, "src.nn.get_cost_value": {"tf": 1.4142135623730951}, "src.nn.get_accuracy_value": {"tf": 1.4142135623730951}, "src.nn.update": {"tf": 1.4142135623730951}, "src.nn.single_layer_backward_propagation": {"tf": 1.4142135623730951}, "src.nn.full_backward_propagation": {"tf": 2}, "src.nn.train": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.callback": {"tf": 1}}, "df": 10}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.GameServer": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"src.backend.GameServer.mainloop": {"tf": 1}, "src.backend.main": {"tf": 1}, "src.play.player_game": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.player_game": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 6}}, "x": {"docs": {"src.nn.relu": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"src.backend.GameServer": {"tf": 1}, "src.backend.GameServer.incomming_handler": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"src.backend.main": {"tf": 1}, "src.nn.NN": {"tf": 1}, "src.nn.update": {"tf": 1.4142135623730951}, "src.nn.train": {"tf": 1}, "src.play.main": {"tf": 1}, "src.train.share_training_data": {"tf": 1}, "src.train.main": {"tf": 1}}, "df": 7, "s": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.train": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"src.nn.NN": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"src.nn.full_forward_propagation": {"tf": 1}, "src.nn.full_backward_propagation": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"src.nn": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"src.nn": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"src.play.load_data": {"tf": 1.7320508075688772}, "src.play.player_game": {"tf": 1.4142135623730951}, "src.train.player_game": {"tf": 1.4142135623730951}, "src.train.store_data": {"tf": 2}}, "df": 4}}}}}, "z": {"docs": {"src.nn.sigmoid": {"tf": 1.7320508075688772}, "src.nn.sigmoid_backward": {"tf": 1}, "src.nn.relu": {"tf": 1.7320508075688772}, "src.nn.relu_backward": {"tf": 1}, "src.nn.swish": {"tf": 1}, "src.nn.swish_backward": {"tf": 1}, "src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 7}, "j": {"docs": {"src.nn.get_cost_value": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"src.play.load_data": {"tf": 1}, "src.train.store_data": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1, "n": {"docs": {"src.nn.single_layer_backward_propagation": {"tf": 1}}, "df": 1}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();